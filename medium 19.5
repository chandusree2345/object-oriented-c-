class Matrix:
    def __init__(self, rows, cols):
        self.rows = rows
        self.cols = cols
        self.matrix = [[0] * cols for _ in range(rows)]

    def set_value(self, row, col, value):
        self.matrix[row][col] = value

    def get_value(self, row, col):
        return self.matrix[row][col]

    def add(self, other_matrix):
        if self.rows != other_matrix.rows or self.cols != other_matrix.cols:
            raise ValueError("Matrices must have the same dimensions for addition")

        result = Matrix(self.rows, self.cols)
        for i in range(self.rows):
            for j in range(self.cols):
                result.set_value(i, j, self.get_value(i, j) + other_matrix.get_value(i, j))
        return result

    def multiply(self, other_matrix):
        if self.cols != other_matrix.rows:
            raise ValueError("Number of columns in first matrix must be equal to the number of rows in the second matrix")

        result = Matrix(self.rows, other_matrix.cols)
        for i in range(self.rows):
            for j in range(other_matrix.cols):
                total = 0
                for k in range(self.cols):
                    total += self.get_value(i, k) * other_matrix.get_value(k, j)
                result.set_value(i, j, total)
        return result

    def __str__(self):
        result = ""
        for row in self.matrix:
            result += " ".join(map(str, row)) + "\n"
        return result

# Test case
def test_matrix_operations():
    try:
        # Matrix addition
        matrix1 = Matrix(2, 2)
        matrix1.set_value(0, 0, 1)
        matrix1.set_value(0, 1, 2)
        matrix1.set_value(1, 0, 3)
        matrix1.set_value(1, 1, 4)

        matrix2 = Matrix(2, 2)
        matrix2.set_value(0, 0, 5)
        matrix2.set_value(0, 1, 6)
        matrix2.set_value(1, 0, 7)
        matrix2.set_value(1, 1, 8)

        addition_result = matrix1.add(matrix2)
        print("Matrix Addition Result:")
        print(addition_result)

        # Matrix multiplication
        matrix3 = Matrix(2, 2)
        matrix3.set_value(0, 0, 1)
        matrix3.set_value(0, 1, 2)
        matrix3.set_value(1, 0, 3)
        matrix3.set_value(1, 1, 4)

        matrix4 = Matrix(2, 2)
        matrix4.set_value(0, 0, 5)
        matrix4.set_value(0, 1, 6)
        matrix4.set_value(1, 0, 7)
        matrix4.set_value(1, 1, 8)

        multiplication_result = matrix3.multiply(matrix4)
        print("Matrix Multiplication Result:")
        print(multiplication_result)

    except ValueError as e:
        print("Error:", e)

# Run the test case
test_matrix_operations()
