#include <iostream>
#include <vector>

class Polynomial {
private:
    std::vector<int> coefficients;

public:
    // Parameterized constructor to initialize coefficients
    Polynomial(const std::vector<int>& coeffs) : coefficients(coeffs) {}

    // Overloading addition operator (+) to add two polynomials
    Polynomial operator+(const Polynomial& other) const {
        int maxSize = std::max(coefficients.size(), other.coefficients.size());
        std::vector<int> resultCoeffs(maxSize, 0);

        for (size_t i = 0; i < coefficients.size(); ++i) {
            resultCoeffs[i] += coefficients[i];
        }

        for (size_t i = 0; i < other.coefficients.size(); ++i) {
            resultCoeffs[i] += other.coefficients[i];
        }

        return Polynomial(resultCoeffs);
    }

    // Method to display the polynomial
    void display() const {
        for (int i = coefficients.size() - 1; i >= 0; --i) {
            if (coefficients[i] != 0) {
                std::cout << coefficients[i] << "x^" << i;
                if (i > 0) {
                    std::cout << " + ";
                }
            }
        }
        std::cout << std::endl;
    }
};

int main() {
    // Creating polynomials
    Polynomial poly1({1, 2, 3});
    Polynomial poly2({-1, 4, 2, 1});

    // Adding two polynomials
    Polynomial result = poly1 + poly2;

    // Displaying the result
    std::cout << "Result of addition: ";
    result.display();

    return 0;
}
