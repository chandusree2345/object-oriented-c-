#include <iostream>

class Matrix {
private:
    int mat[2][2]; // 2x2 matrix

public:
    // Parameterized constructor
    Matrix(int a, int b, int c, int d) {
        mat[0][0] = a;
        mat[0][1] = b;
        mat[1][0] = c;
        mat[1][1] = d;
    }

    // Overloading multiplication operator
    Matrix operator*(const Matrix& other) const {
        Matrix result(0, 0, 0, 0);
        result.mat[0][0] = mat[0][0] * other.mat[0][0] + mat[0][1] * other.mat[1][0];
        result.mat[0][1] = mat[0][0] * other.mat[0][1] + mat[0][1] * other.mat[1][1];
        result.mat[1][0] = mat[1][0] * other.mat[0][0] + mat[1][1] * other.mat[1][0];
        result.mat[1][1] = mat[1][0] * other.mat[0][1] + mat[1][1] * other.mat[1][1];
        return result;
    }

    // Method to display the matrix
    void display() const {
        for (int i = 0; i < 2; ++i) {
            for (int j = 0; j < 2; ++j) {
                std::cout << mat[i][j] << " ";
            }
            std::cout << std::endl;
        }
    }
};

int main() {
    // Creating two Matrix objects
    Matrix mat1(1, 2, 3, 4);
    Matrix mat2(5, 6, 7, 8);

    // Multiplying two matrices
    Matrix result = mat1 * mat2;

    // Displaying the result of multiplication
    std::cout << "Result of multiplication:" << std::endl;
    result.display();

    return 0;
}
