from abc import ABC, abstractmethod
import math

class Shape(ABC):
    @abstractmethod
    def calculateArea(self):
        pass

    @abstractmethod
    def calculatePerimeter(self):
        pass

class Rectangle(Shape):
    def __init__(self, length, width):
        self.length = length
        self.width = width

    def calculateArea(self):
        return self.length * self.width

    def calculatePerimeter(self):
        return 2 * (self.length + self.width)

class Circle(Shape):
    def __init__(self, radius):
        self.radius = radius

    def calculateArea(self):
        return math.pi * self.radius ** 2

    def calculatePerimeter(self):
        return 2 * math.pi * self.radius

# Example usage:
rectangle = Rectangle(5, 4)
print("Rectangle Area:", rectangle.calculateArea())
print("Rectangle Perimeter:", rectangle.calculatePerimeter())

circle = Circle(3)
print("Circle Area:", circle.calculateArea())
print("Circle Perimeter:", circle.calculatePerimeter())
